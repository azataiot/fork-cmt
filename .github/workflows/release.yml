name: Release

on:
  push:
    tags:
      - 'v[0-9]+*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: cmt

jobs:
  release:
    name: Build and Release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: cmt-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            asset_name: cmt-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: cmt-darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: cmt-darwin-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: cmt-windows-amd64.exe

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          mode: HYBRID
          configurationJson: |
            {
              "categories": [
                {
                  "title": "## ‚ú® Features",
                  "labels": ["feature", "enhancement", "feat"]
                },
                {
                  "title": "## üêõ Fixes",
                  "labels": ["fix", "bug"]
                },
                {
                  "title": "## üìù Documentation",
                  "labels": ["documentation", "docs"]
                },
                {
                  "title": "## üî® Maintenance",
                  "labels": ["chore", "dependencies"]
                }
              ],
              "template": "#{{CHANGELOG}}\n\n## Other\n#{{UNCATEGORIZED}}",
              "pr_template": "- {{TITLE}} (#{{NUMBER}})",
              "empty_template": "- No changes",
              "label_extractor": [
                {
                  "pattern": "(.) (.+)",
                  "target": "$1",
                  "flags": "gu"
                }
              ],
              "transformers": [
                {
                  "pattern": "^bump version.*$",
                  "target": ""
                },
                {
                  "pattern": "PR: #[0-9]+",
                  "target": ""
                }
              ],
              "max_tags_to_fetch": 200,
              "max_pull_requests": 200,
              "max_back_track_time_days": 90,
              "exclude_merge_branches": ["main"],
              "sort": "DESC",
              "template_labels": [
                {
                  "label": "feature",
                  "on_property": "title",
                  "use_raw": true,
                  "pattern": "^feat:.*"
                },
                {
                  "label": "fix",
                  "on_property": "title",
                  "use_raw": true,
                  "pattern": "^fix:.*"
                },
                {
                  "label": "documentation",
                  "on_property": "title",
                  "use_raw": true,
                  "pattern": "^docs:.*"
                },
                {
                  "label": "chore",
                  "on_property": "title",
                  "use_raw": true,
                  "pattern": "^chore:.*"
                }
              ]
            }

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.target }}
          args: "--release"
          strip: true

      - name: Prepare asset
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}.exe ${{ matrix.asset_name }}
          else
            cp target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} ${{ matrix.asset_name }}
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          body: ${{ steps.build_changelog.outputs.changelog }}
          files: ${{ matrix.asset_name }}
          draft: false
          prerelease: false
          make_latest: true
